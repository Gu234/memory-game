@import '~csshake';
@import '~csshake/scss/csshake-hard.scss';
.container {
    padding-top: 100px;
    max-width: 700px;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    margin: 0 auto;
  }
  
  // .card{
  //   display: flex;
  //   justify-content: center;
  //   align-items: center;
  //   height: 100px;
  //   width: 100px;
  //   margin: 5px;
  //   background-color: green;
  //   border: 1px solid transparent;
  //   user-select: none;
  //   background-repeat: no-repeat;
  //   background-size: cover;
  //   perspective: 1000px;
    
  //   transform-style: preserve-3d;
  //   position: relative;
    
  //   div{
  //     transition: 0.8s; // transform
  //     backface-visibility: hidden;
  //     position: absolute;
  //     top: 0;
  //     left: 0;
  //     width: 100%;
  //     height: 100%;
  //     border-radius: 10px;
  //   }
  //   .card-back{
  //     transform: rotateY(180deg);
  //   }
  //   .card-front{
  //     font-size: 30px;
  //   }
    
  //   .card:hover .card-wrapper{
  //     transform: rotateY(180deg);
  //   }
  // }
  
  

  // .hidden{
  //   background-image: url('./assets/android-original.svg');
  //   background-color: gray;
  //   color: transparent;
  // }
  
  // .invalid{
  //   border: 1px solid red;
  // }
  
  .matched .flip-card-back{
    background-color: greenyellow;
  }

  .shake-short {
    @include do-shake(
          $name: 'shake-short', /* {String} is the name for the keyframes animation */
          $h: 5px, /*  {Number} is the max number for random to assign in x axis */
          $v: 5px, /* {Number} is the max number for random to assign in y axis */
          $r: 3deg, /* {Number} is the max number for random rotation */
          $dur: 100ms, /* {Number} is the animation-duration time value */
          $precision: .02, /* {Number} is the precision of the keyframes animation. For example .02 generates keyframes each 2% and .1 each 10%. The calculation is $step: 100 * $precision; */
          $opacity: false, 
          $q: 3, /* {String} is the animation-iteration-count value */
          $t: ease-in-out, /* {String} animation-timing-function value */
          $delay: null, /* {Number} animation-delay time value */
          $chunk: 100%); /* {Number} is the part of the keyframes where apply the animation */
  }

  
  .flip-card {
    background-color: transparent;
    width: 100px;
    height: 100px;
    border: 1px solid #f1f1f1;
    perspective: 1000px; /* Remove this if you don't want the 3D effect */
  }
  
  /* This container is needed to position the front and back side */
  .flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.5s;
    transform-style: preserve-3d;
  }
  
  /* Do an horizontal flip when you move the mouse over the flip box container */
  .flip-card-visible .flip-card-inner {
    transform: rotateY(180deg);
  }
  
  /* Position the front and back side */
  .flip-card-front, .flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
  }
  
  /* Style the front side (fallback if image is missing) */
  .flip-card-front {
    background-color: #bbb;
    color: black;
  }
  
  /* Style the back side */
  .flip-card-back {
    transition: 0.6s;

    background-color: white;
    color: white;
    transform: rotateY(180deg);
  }